<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fenglei.mapper.basedata.BdWagesMapper">

    <resultMap id="wagesMap" type="com.fenglei.model.basedata.BdWages">
        <result property="id" column="id"></result>
        <result property="status" column="status"></result>
        <result property="createTime" column="create_time"></result>
        <result property="creator" column="creator"></result>
        <result property="creatorId" column="creator_id"></result>
        <result property="updateTime" column="update_time"></result>
        <result property="updater" column="updater"></result>
        <result property="updaterId" column="updater_id"></result>
        <result property="auditTime" column="audit_time"></result>
        <result property="auditorId" column="auditor_id"></result>
        <result property="auditor" column="auditor"></result>

        <result property="number" column="number"></result>
        <result property="name" column="name"></result>
        <result property="remark" column="remark"></result>
        <result property="originalId" column="original_id"></result>
        <result property="isTemp" column="is_temp"></result>
    </resultMap>

    <select id="getPage" resultType="com.fenglei.model.basedata.BdWages">
        SELECT bw.*
             , ctr.username as creator, utr.username as updater, atr.username as auditor
             , etr.username as enabler
        FROM bd_wages bw
            LEFT JOIN sys_user ctr ON bw.creator_id = ctr.id
            LEFT JOIN sys_user utr ON bw.updater_id = utr.id
            LEFT JOIN sys_user atr ON bw.auditor_id = atr.id
            LEFT JOIN sys_user etr ON bw.enabler_id = etr.id
        <where>
            bw.deleted = 0
            <if test="bdWages.number != null and bdWages.number != ''">
                and bw.number like concat('%', #{ bdWages.number }, '%')
            </if>
            <if test="bdWages.name != null and bdWages.name != ''">
                and bw.name like concat('%', #{ bdWages.name }, '%')
            </if>
            <if test="bdWages.ids != null and bdWages.ids.size > 0">
                and bw.id in
                <foreach collection="bdWages.ids" item="id" index="index" open="(" separator="," close=")">
                    #{ id }
                </foreach>
            </if>
            <if test="bdWages.excludeIds != null and bdWages.excludeIds.size > 0">
                and bw.id not in
                <foreach collection="bdWages.excludeIds" item="excludeId" index="index" open="(" separator="," close=")">
                    #{ excludeId }
                </foreach>
            </if>
            <if test="bdWages.inStatus != null and bdWages.inStatus.size > 0">
                and bw.status in
                <foreach collection="bdWages.inStatus" item="status" index="index" open="(" separator="," close=")">
                    #{ status }
                </foreach>
            </if>
            <if test="bdWages.enabled != null">
                and bw.enabled = #{ bdWages.enabled }
            </if>
        </where>
        ORDER BY bw.create_time DESC
    </select>

    <select id="getPageWithTemp" resultMap="wagesMap">
        SELECT * FROM (
            SELECT bw.*
                 , ctr.username as creator, utr.username as updater, atr.username as auditor
                 , etr.username as enabler
                 , 1 as is_temp
            FROM bd_temp_wages bw
                LEFT JOIN sys_user ctr ON bw.creator_id = ctr.id
                LEFT JOIN sys_user utr ON bw.updater_id = utr.id
                LEFT JOIN sys_user atr ON bw.auditor_id = atr.id
                LEFT JOIN sys_user etr ON bw.enabler_id = etr.id
            <where>
                bw.creator_id = #{ bdWages.creatorId }
                <if test="bdWages.tempIds != null and bdWages.tempIds.size > 0">
                    and bw.id in
                    <foreach collection="bdWages.tempIds" item="tempId" index="index" open="(" separator="," close=")">
                        #{ tempId }
                    </foreach>
                </if>
            </where>

            UNION ALL

            SELECT bw.*
                 , ctr.username as creator, utr.username as updater, atr.username as auditor
                 , etr.username as enabler
                 , 0 as is_temp
            FROM bd_wages bw
                LEFT JOIN sys_user ctr ON bw.creator_id = ctr.id
                LEFT JOIN sys_user utr ON bw.updater_id = utr.id
                LEFT JOIN sys_user atr ON bw.auditor_id = atr.id
                LEFT JOIN sys_user etr ON bw.enabler_id = etr.id
            <where>
                bw.deleted = 0
                <if test="bdWages.ids != null and bdWages.ids.size > 0">
                    and bw.id in
                    <foreach collection="bdWages.ids" item="id" index="index" open="(" separator="," close=")">
                        #{ id }
                    </foreach>
                </if>
                <if test="bdWages.excludeIds != null and bdWages.excludeIds.size > 0">
                    and bw.id not in
                    <foreach collection="bdWages.excludeIds" item="excludeId" index="index" open="(" separator="," close=")">
                        #{ excludeId }
                    </foreach>
                </if>
            </where>
        ) as tab
        <where>
            1 = 1
            <if test="bdWages.number != null and bdWages.number != ''">
                and number like concat('%', #{ bdWages.number }, '%')
            </if>
            <if test="bdWages.name != null and bdWages.name != ''">
                and name like concat('%', #{ bdWages.name }, '%')
            </if>
            <if test="bdWages.inStatus != null and bdWages.inStatus.size > 0">
                and status in
                <foreach collection="bdWages.inStatus" item="status" index="index" open="(" separator="," close=")">
                    #{ status }
                </foreach>
            </if>
            <if test="bdWages.enabled != null">
                and enabled = #{ bdWages.enabled }
            </if>
        </where>
        ORDER BY create_time DESC
    </select>

    <select id="infoById" resultType="com.fenglei.model.basedata.BdWages">
        SELECT bw.*
             , ctr.username as creator, utr.username as updater, atr.username as auditor
             , etr.username as enabler
        FROM bd_wages bw
            LEFT JOIN sys_user ctr ON bw.creator_id = ctr.id
            LEFT JOIN sys_user utr ON bw.updater_id = utr.id
            LEFT JOIN sys_user atr ON bw.auditor_id = atr.id
            LEFT JOIN sys_user etr ON bw.enabler_id = etr.id
        <where>
            bw.id = #{ id }
        </where>
    </select>

    <select id="getNos" resultType="java.lang.String">
        SELECT *
        FROM (
            select number from bd_wages
            union all
            select number from bd_temp_wages
        ) tb
        where number like concat(#{ noLike }, '%')
        order by number desc
    </select>
</mapper>
